1
00:00:00,000 --> 00:00:04,000
Let's break down the steps we're going to take to create this chrome extension.

2
00:00:04,000 --> 00:00:10,000
First, we'll start off by creating our Extension Directory and the manifest file for the extension.

3
00:00:10,000 --> 00:00:15,000
We'll do this in a similar way as we did in the last module.

4
00:00:15,000 --> 00:00:20,000
Then, we'll design the main UI for the popup when a user clicks the Extensions icon from the toolbar.

5
00:00:20,000 --> 00:00:25,000
This UI will have a current total and goal displayed,

6
00:00:25,000 --> 00:00:31,000
as well as give the user a place to add a protein amount to the total.

7
00:00:31,000 --> 00:00:36,000
Next, we'll add the ability to actually save the total and display the correct total in the popup UI.

8
00:00:36,000 --> 00:00:40,000
We'll utilize the Chrome Storage APIs to save and retrieve the saved data.

9
00:00:40,000 --> 00:00:46,000
After that, we'll create an options page for our extension. The options page will show the current goal

10
00:00:46,000 --> 00:00:52,000
and let the user change the goal and save it or reset the current protein total.

11
00:00:52,000 --> 00:00:59,000
Then, we'll add some notifications to the extension; we'll do this by using the Chrome Notifications API,

12
00:00:59,000 --> 00:01:04,000
which allows us to pop up a small notification at the bottom of the screen.

13
00:01:04,000 --> 00:01:10,000
We'll add a notification for when the user resets the total and also one for when they have met their goal.

14
00:01:10,000 --> 00:01:17,000
After that, we'll use the Chrome Browser Action API to add a badge to our Extension icon that will display

15
00:01:17,000 --> 00:01:22,000
the current protein total. In order to do this, we'll need to register for any changes to the protein total,

16
00:01:22,000 --> 00:01:28,000
and since we want this functionality to work regardless of how the total is updated, we'll use an event page

17
00:01:28,000 --> 00:01:35,000
to implement this functionality. Finally, we'll use our event page again to register a context menu item

18
00:01:35,000 --> 00:01:42,000
that will allow a user to add protein just by selecting a number on a page and right-clicking, then choosing Add Protein.

19
00:01:42,000 --> 00:01:45,000
That's it; quite a bit of functionality in this extension, but it's actually

20
00:01:45,000 --> 00:59:00,000
pretty easy to implement using the chrome APIs, as you'll see coming up next.

