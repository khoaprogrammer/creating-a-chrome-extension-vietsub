1
00:00:01,000 --> 00:00:08,000
I've got our eventPage.js file open here and what we're going to put in here is anything that we want to

2
00:00:08,000 --> 00:00:17,000
run as soon as our extension loads up. So, because this eventPage.js is only going to run one time when our

3
00:00:17,000 --> 00:00:23,000
extension loads, we're going to want to add any kind of listeners or event handlers in here, we're going to

4
00:00:23,000 --> 00:00:30,000
want to subscribe to any events that we're interested in, and then set the callbacks so that those events

5
00:00:30,000 --> 00:00:36,000
when they're triggered will call our code. So what we're going to do in this case is we want to find out

6
00:00:36,000 --> 00:00:46,000
when the Chrome storage has changed, so we're just going to do this chrome.storage.onChanged.addListener.

7
00:00:46,000 --> 00:00:53,000
And again, I found out about this API through the Chrome API documentation that I had shown you earlier in

8
00:00:53,000 --> 00:01:00,000
module 1; you can find all of the documentation on each one of these APIs there, but what this API will do

9
00:01:00,000 --> 00:01:10,000
for us is it will allow us to basically get a callback whenever anything changes in the storage for our extension.

10
00:01:10,000 --> 00:01:17,000
So, we can specify a function to be called back, and in this function, we are going to get back an object

11
00:01:17,000 --> 00:01:26,000
called changes, and this object is going to contain anything that's changed, and it's going to give us the

12
00:01:26,000 --> 00:01:36,000
old and new values. So, let's go ahead now and utilize this to be able to set the badge text for our browser action.

13
00:01:36,000 --> 00:01:47,000
So now we're going to call chrome.browserAction.setBadgeText and this particular API allows us to change

14
00:01:47,000 --> 00:01:55,000
that text or basically add a badge to our browserAction, that little icon for our extension in the toolbar.

15
00:01:55,000 --> 00:02:04,000
And what we're going to pass in here is basically just an object that is going to have the text that we want to set.

16
00:02:04,000 --> 00:02:11,000
So we're going to have a text property and then we want to pass in a string, so we'll do changes.total,

17
00:02:11,000 --> 00:02:16,000
that's going to get the total from this changes, if the total has changed this will have a value.

18
00:02:16,000 --> 00:02:22,000
And then newValue is going to get the new value and we're going to have an old value and a new value for

19
00:02:22,000 --> 00:02:26,000
anything that's changed, and then toString to make this a string.

20
00:02:26,000 --> 00:02:31,000
So that's it; now what should happen is our event page is going to run, it's going to run this code,

21
00:02:31,000 --> 00:02:37,000
which is going to add this listener, which will give us this callback for this function that's going to set

22
00:02:37,000 --> 00:02:43,000
the badge text whenever anything in storage changes. We know that when something in storage changes,

23
00:02:43,000 --> 00:02:51,000
it's going to be --- either our total or it's going to be our goal, so we can be pretty sure that setting

24
00:02:51,000 --> 00:02:58,000
this badgeText will be the correct thing to do. Okay, so now we're going to open up our browser

25
00:02:58,000 --> 00:03:01,000
and what we want to do here is we want to reload our Protein Tracker.

26
00:03:01,000 --> 00:03:08,000
We need to do this because we've added that background page or event page in our manifest, so we need to

27
00:03:08,000 --> 00:03:15,000
re-read this manifest. So now we should be able to go to our Protein Tracker and if we enter an amount,

28
00:03:15,000 --> 00:03:24,000
let's say we add 12 more to our protein, then you can see that our badge shows up and it says 172 here,

29
00:03:24,000 --> 00:03:33,000
and whatever we change this to, that badge should get updated. And if we even reset this, so if we do Reset Total,

30
00:03:33,000 --> 00:59:00,000
we can see that our badge gets updated to 0.

